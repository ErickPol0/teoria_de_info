import heapq
from collections import Counter

class NodoHuffman:
    def __init__(self, caracter, frecuencia):
        self.caracter = caracter
        self.frecuencia = frecuencia
        self.izquierda = None
        self.derecha = None

    def __lt__(self, otro):
        return self.frecuencia < otro.frecuencia

def arbol_huffman(frecuencias):
    heap = []

    for caracter, frecuencia in frecuencias.items():
      nodo = NodoHuffman(caracter, frecuencia)  
      heap.append(nodo) 
    
    heapq.heapify(heap)

    return heap


def comprimir_texto(texto):
    frecuencias = Counter(texto)
    arbol = arbol_huffman(frecuencias)
    print(arbol)
    

if __name__ == "__main__":
    texto_original = "Hala Madrid"
    comprimir_texto(texto_original)
